// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux.hdl
// Credit https://github.com/FGrosse/Nand2Tetris/blob/master/01/Mux.hdl
// I found this code at the above github repo and it was 10 chips more optimized than
// my previous attempt. I reverse engineered the Canonical Representation and
// then truth table and got the greater lesson of why this code was so much better than my first attempt.

/** 
 * Multiplexor. If sel == 1 then out = b else out = a.
 */

CHIP Mux {
    IN a, b, sel;
    OUT out;

    PARTS:
    Not(in=sel,out=notsel);
    And(a=a,b=notsel,out=w1);
    And(a=b,b=sel,out=w2);
    Or(a=w1,b=w2,out=out);


}
